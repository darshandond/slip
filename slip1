import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Sample dataset creation
data = {
    'Size': [1500, 2000, 2500, 1800, 2200, 1700],
    'Bedrooms': [3, 4, 3, 2, 4, 3],
    'Age': [20, 15, 10, 30, 8, 12],
    'Price': [300000, 400000, 450000, 350000, 500000, 320000]
}

df = pd.DataFrame(data)

# Define features and target
X = df[['Size', 'Bedrooms', 'Age']]
y = df['Price']

# Split data
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# Initialize and train model
model = LinearRegression()
model.fit(X_train, y_train)
 
# Make predictions on the test set
y_pred = model.predict(X_test)

# Evaluate model
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print("\nModel Evaluation:")
print(f"Mean Squared Error: {mse:.2f}")
print(f"R-squared: {r2:.2f}")                

# Display coefficients and intercept
print("\nCoefficients:", model.coef_)
print("Intercept:", model.intercept_)

# New data in DataFrame format with matching column names
new_house = pd.DataFrame({'Size': [2000], 'Bedrooms': [3], 'Age': [10]})
predicted_price = model.predict(new_house)
print(f"\nPredicted Price for new house (Size=2000, Bedrooms=3, Age=10): ${predicted_price[0]:,.2f}")
